{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'ffkbu-',

  -- Name of the community.
  site_name = 'Freifunk KBU Hood Bonn V2',

  -- Shorthand of the community.
  site_code = 'ffkbu-V2',

  -- Prefixes used within the mesh. Both are required.
 prefix4 = '10.70.0.0/16',
  prefix6 = 'fdff::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- Domain Seed
  domain_seed = '22ddc6a6ae620ac6573ee7525852a90e53375259fcbba98c1bf9c020a4df361a',


  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {
                'fdd3:5d18:b5dd:fc00:2000::1',
                'fdd3:5d18:b5dd:fc00:3000::1',
        },

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,
    --disables 802.11b rates
    supported_rates = {6000, 9000, 12000, 18000, 24000, 36000, 48000, 54000},
    basic_rate = {6000, 9000, 18000, 36000, 54000},

    -- ESSID used for client network.
    ap = {
        ssid = 'kbu.freifunk.net',
    },
  mesh = {
    id = '02:d1:11:37:fd:49',
    mcast_rate = 12000,
  },
},

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel and htmode.
  wifi5 = {
    channel = 44,
    supported_rates = {6000, 9000, 12000, 18000, 24000, 36000, 48000, 54000},
    basic_rate = {6000, 9000, 18000, 36000, 54000},

    ap = {
        ssid = 'kbu.freifunk.net',
    },
  mesh = {
    id = '02:d1:11:37:fd:69',
    mcast_rate = 12000,
  },
},

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    name= { 'nextnode', 'nextnode.kbu.local' },
    -- anycast IPs of all nodes
    -- ip4 = '10.70.0.255',
    -- ip6 = 'fdd3:5d16:b5dd:fd39::fd39',
        ip6 = 'fdff::ff',

    -- anycast MAC of all nodes
    mac = '16:42:ca:fe:be:ef',
  },

        mesh = {
        vxlan = true,

        batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      gw_sel_class = 3,
      routing_algo = 'BATMAN_IV',
        },
        },

--      dns = {
--              cacheentries=4096,
--              servers = {
--                      'fdd3:5d18:b5dd:fc00::2',
--                      'fdd3:5d18:b5dd:fc00::3',
--              },
--      },



  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.

  mesh_vpn = {
          mtu = 1398,
    fastd = {
            configurable = true,
            -- List of crypto-methods to use.
            methods = {'salsa2012+umac'},
            enabled = true,
            groups = {
                backbone = {
                        -- Limit number of connected peers to reduce bandwidth.
                        limit = 1,
                       -- List of peers.
                        peers = {
                                bonn1 = {
                                        key = '2b92f01f1ce4415a863fd25bd803f714f0c261ab2fa5b8fabc0c15b6f609af9a',
                                        remotes = {'ipv4 "bonn1.kbu.freifunk.net" port 10040'},
                                     },
                                bonn2 = {
                                        key = '8d00db0839bc3a16fe77c3b5b53f679646fe1beece93b235dc887f9ffff134b3',
                                        remotes = {'ipv4 "bonn2.kbu.freifunk.net" port 10040'},
                                        },
                                bonn3 = {
                                        key = 'b1df0817779a579ee77512165a3e9e9311d409608d4eaf7515f0b3709359d512',
                                        remotes = {'ipv4 "bonn3.kbu.freifunk.net" port 10040'},
                                        },
                                bonn4 = {
                                        key = '0bb9515bdfbd046b1c7e833c782bb3ad6ab998bbf0ff66b57c8df6037e9345b5',
                                        remotes = {'ipv4 "bonn4.kbu.freifunk.net" port 10040'},
                                        },
                                bonn5 = {
                                        key = '2aac8b28a6131bb60ad4b846679e0a3c6e6c1929ea5e6e5d5c88de821d332cf5',
                                        remotes = {'ipv4 "bonn5.kbu.freifunk.net" port 10040'},
                                        },
                                bonn6 = {
                                        key = '10b02cb420b648af77f3b31089d41755e023aa3dcd5f5907402b8e0e12f23a0d',
                                         remotes = {'ipv4 "bonn6.kbu.freifunk.net" port 10040'},
                                },
                                bonn7 = {
                                        key = 'a1bc00fdaf1d94da6cb08913e68eb4b177f1e86d5a5f781ac1f0451b95008842',
                                        remotes = {'ipv4 "bonn7.kbu.freifunk.net" port 10040'},
                                        },
                                bonn8 = {
                                        key = '86375aa36dbd34e864aed2b3941975d3b9719e52e49057236076167f15d97a1a',
                                        remotes = {'ipv4 "bonn8.kbu.freifunk.net" port 10040'},
                                        },
                                bonn9 = {
                                        key = '581cff0e2b0afd086345cfad7d21f66c8ab0f9ffdb4a37813e46bfd2df42521a',
                                        remotes = {'ipv4 "bonn9.kbu.freifunk.net" port 10040'},
                                        },
                                bonn10 = {
                                        key = '43386cf242077d23ae277139c38bb8afc4e9435fa65c55b7508275a990e24109',
                                        remotes = {'ipv4 "bonn10.kbu.freifunk.net" port 10040'},
                                        },
                                },
                                },
                        },
        },
        bandwidth_limit = {
                -- The bandwidth limit can be enabled by default here.
                enabled = false,
                -- Default upload limit (kbit/s).
                egress = 200,
                -- Default download limit (kbit/s).
                ingress = 3000,
                },
  },

  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
                'http://updates.bn.ffkbu/autoupdater/bonn/stable/fastd/sysupgrade',
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
                'b35dfb30ab9f54064209d9cb6042d6509cdfdd19352798ef6c3fd61787d4008f', -- JohnnyBee
                '76a44fbb724444ecddc2f683b9e53e061f612a6bfad956b2217c7fc0a82f2df5', -- K3V1N
                '360793e1469e134e99fdecf543202dd0b5b1779299372ac1a4e7c3cad5aade89', -- Simon
                '1c38f1cb1d3900ad053519d7e2b689bb8ae2e59ff72a9e571d4bb559dada3e7a', -- g3ntleman
                '7948cea2d21d94bcf59ef5be2dc248de7d7b828b82993bde1758876560c12c27', -- zygentoma
        },
      },
    },
  },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

--  authorized_keys = {
--                '',
 --       },

  opkg = {
 --     openwrt = 'http://ftp.stw-bonn.de/pub/openwrt/%n/%v/%S/packages',
        extra = {
                modules = 'http://packages.bn.ffkbu/modules/bonn/stable/gluon-ffkbu-%GR/%S',
                },
  },

  -- Skip setup mode (config mode) on first boot
  setup_mode = {
    skip = true,
    },
  config_mode = {
  remote_login = {
    show_password_form = true,
    min_password_length = 8,
  },
        owner = {
                obligatory = true,
        },
  },
}
